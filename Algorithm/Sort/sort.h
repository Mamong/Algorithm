//
//  sort.h
//  Algorithm
//
//  Created by marco on 2019/3/5.
//  Copyright © 2019 flywire. All rights reserved.
//

#ifndef sort_h
#define sort_h

/*总结
 算法选择考虑因素：
 1.排序元素数目n
 2.元素本身信息量
 3.关键字结构及其分布情况
 4.稳定性要求
 5.存储结构及辅助空间大小
 
 小结：
 1.n比较小，50以内，可采用直接插入排序或简单选择排序。由于直接插入排序所需记录移动操作较简单选择排序多，
 因而当记录本身信息量较大时，用简单选择排序较好。
 2.若文件的初始状态已按关键字基本有序，则选择直接插入排序或冒泡排序为宜。
 3.若n较大，则应采用时间复杂度为O(nlogn)的排序方法：快速排序、堆排序或归并排序。
 4.若n很大，记录的关键字位数较少且可以分解时，采用基数排序较好
快速排序被认为是目前基于比较的内部排序法中最好的方法，当待排序的关键字随机分布时，快速排序的平均时间最短。
堆排序的辅助空间少于快速排序，并且不会出现快速排序可能出现的最坏情况。它们都是不稳定的。
要求稳定且时间复杂度为O(nlogn)则可选用归并排序。通常先利用直接插入排序求得较长y的有序子文件，然后再两两归并，改进后的归并排序仍是稳定的。
 
 5.在基于比较的排序方法中，每次比较两个关键字大小后，仅仅出现两种可能的转移，因此可以用一棵二叉树来描述比较判定j过程，
 由此可以证明：当文件的n个关键字随机分布时，任何借助于比较的排序算法，至少需要O(nlogn)的时间。
 6.记录本身信息量较大时，为避免耗费大量时间移动记录，可用链表作为存储结构
 
 
 玩转算法面试
 1-1
 1.数据有什么特征？
 如果有大量重复的元素，三路快排是更好的选择。没有就普通快排；
 如果数据是近乎有序的，插入排序比较好。（银行记录）
 如果数据的取值范围非常有限，计数排序比较好。（学生成绩）
 如果要求稳定排序，归并排序比较好。
 2.数据的存储状况
 如果使用链表存储，归并排序比较好。
 如果数据量大，不足以装入内存，需要使用外部排序。
 
 
 稳定性:茶贸轨迹稳，捡(简单选择)块锡堆不稳。
 
 直接插入排序，最好的情况是数据元素已经全部排好序，那么内循环次数为0，外循环次数为n-1，所以，最好的情况下时间复杂度为O(N)。最坏的情况是原始数据元素集合反序排列，此时，算法中内层while循环的循环次数每次均为i。因此，最坏的情况下时间复杂度为O(N^2)。直接插入排序的空间复杂度为O(1)，显然直接插入排序是一种稳定的排序算法。
 
 
 快速排序如果每次选取的标准元素都能均分两个子数组区间长度，这样的快速排序过程是一个完全二叉树结构。最好情况下快速排序算法时间复杂度是O(nlbn)。快速排序最坏的情况是，数据元素已经全部有序，此时数组根节点的分解次数构成一颗二叉退化树，所以，最坏情况下快速排序算法的时间复杂度是O(n^2)。
 　　由于快速排序算法需要堆栈空间临时保存递归调用参数，堆栈空间的使用个数和递归调用的次数有关，由于二叉树有可能是单支二叉树，而单支二叉树的深度为n-1，所以，最坏情况下快速排序算法的空间复杂度是O(n)。
 
 
 各种排序算法性能比较：
 
 　　排序方法         最好时间        平均时间        最坏时间           最坏辅助空间         稳定性      数据结构         其他
 
 　　直接插入排序     O(n) 有序        O(n^2)       O(n^2) 逆序         O(1) 哨兵          稳定       线性表、链表
 
 　　希尔排序        O(n) 增量相关     O(n^1.3)     O(n^2)              O(1)             不稳定      线性表
 
 　　直接选择排序     O(n^2) 无关      O(n^2)         O(n^2) 无关         O(1)            不稳定      线性表、链表
 
 　　堆排序         O(nlbn) 无关       O(nlbn)        O(nlbn)无关         O(1)           不稳定
 
 　　冒泡排序         O(n) 有序         O(n^2)        O(n^2)  逆序         O(1)            稳定      线性表
 
 　　快速排序       O(nlbn) 对称划分    O(nlbn)    O(n^2) 极不对称(正序或逆序)  O(n) 平均O(nlbn) 不稳定  线性表、链表
 
 　　归并排序       O(nlbn) 无关       O(nlbn)        O(nlbn) 无关        O(n)             稳定      线性表、链表    非原地
 
 　　计数排序       O(d(n+r)) 无关     O(d(n+r))     O(d(n+r)) 无关       O(r队列)          稳定
 　　桶排序         O(d(n+r)) 无关     O(d(n+r))     O(d(n+r)) 无关       O(r队列)          稳定
 　　基数排序       O(d(n+r)) 无关     O(d(n+r))     O(d(n+r)) 无关       O(r队列)          稳定

*/




#endif /* sort_h */
